//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CPI.Models.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBContext : DbContext
    {
        public DBContext()
            : base("name=DBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ARFCN> ARFCNs { get; set; }
        public virtual DbSet<Computer> Computers { get; set; }
        public virtual DbSet<License> Licenses { get; set; }
        public virtual DbSet<Provider> Providers { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Call> Calls { get; set; }
        public virtual DbSet<SMS> SMS { get; set; }
    
        public virtual ObjectResult<ARFCN> sp_GetAllARFCNs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ARFCN>("sp_GetAllARFCNs");
        }
    
        public virtual ObjectResult<ARFCN> sp_GetAllARFCNs(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ARFCN>("sp_GetAllARFCNs", mergeOption);
        }
    
        public virtual ObjectResult<Computer> sp_GetAllComputers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Computer>("sp_GetAllComputers");
        }
    
        public virtual ObjectResult<Computer> sp_GetAllComputers(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Computer>("sp_GetAllComputers", mergeOption);
        }
    
        public virtual ObjectResult<License> sp_GetAllLicenses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<License>("sp_GetAllLicenses");
        }
    
        public virtual ObjectResult<License> sp_GetAllLicenses(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<License>("sp_GetAllLicenses", mergeOption);
        }
    
        public virtual ObjectResult<Setting> sp_GetAllSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Setting>("sp_GetAllSettings");
        }
    
        public virtual ObjectResult<Setting> sp_GetAllSettings(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Setting>("sp_GetAllSettings", mergeOption);
        }
    
        public virtual ObjectResult<Unit> sp_GetAllUnit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Unit>("sp_GetAllUnit");
        }
    
        public virtual ObjectResult<Unit> sp_GetAllUnit(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Unit>("sp_GetAllUnit", mergeOption);
        }
    
        public virtual ObjectResult<User> sp_GetAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("sp_GetAllUsers");
        }
    
        public virtual ObjectResult<User> sp_GetAllUsers(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("sp_GetAllUsers", mergeOption);
        }
    
        public virtual ObjectResult<License> sp_GetLastLicense()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<License>("sp_GetLastLicense");
        }
    
        public virtual ObjectResult<License> sp_GetLastLicense(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<License>("sp_GetLastLicense", mergeOption);
        }
    
        public virtual ObjectResult<Provider> sp_GetProvider(Nullable<int> mcc, Nullable<int> mnc)
        {
            var mccParameter = mcc.HasValue ?
                new ObjectParameter("mcc", mcc) :
                new ObjectParameter("mcc", typeof(int));
    
            var mncParameter = mnc.HasValue ?
                new ObjectParameter("mnc", mnc) :
                new ObjectParameter("mnc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Provider>("sp_GetProvider", mccParameter, mncParameter);
        }
    
        public virtual ObjectResult<Provider> sp_GetProvider(Nullable<int> mcc, Nullable<int> mnc, MergeOption mergeOption)
        {
            var mccParameter = mcc.HasValue ?
                new ObjectParameter("mcc", mcc) :
                new ObjectParameter("mcc", typeof(int));
    
            var mncParameter = mnc.HasValue ?
                new ObjectParameter("mnc", mnc) :
                new ObjectParameter("mnc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Provider>("sp_GetProvider", mergeOption, mccParameter, mncParameter);
        }
    
        public virtual ObjectResult<User> sp_GetUserByUserName(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("sp_GetUserByUserName", usernameParameter);
        }
    
        public virtual ObjectResult<User> sp_GetUserByUserName(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("sp_GetUserByUserName", mergeOption, usernameParameter);
        }
    
        public virtual ObjectResult<Call> sp_GetAllCalls()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Call>("sp_GetAllCalls");
        }
    
        public virtual ObjectResult<Call> sp_GetAllCalls(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Call>("sp_GetAllCalls", mergeOption);
        }
    
        public virtual ObjectResult<SMS> sp_GetAllSMS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMS>("sp_GetAllSMS");
        }
    
        public virtual ObjectResult<SMS> sp_GetAllSMS(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMS>("sp_GetAllSMS", mergeOption);
        }
    }
}
